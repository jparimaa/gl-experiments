#version 450 core

#define DEPTH 128

layout (local_size_x = 32, local_size_y = 18, local_size_z = 1) in;

layout (std430, binding = 0) readonly buffer scatteringData
{
    vec4 scattering[];
};

layout (binding = 1) writeonly uniform image3D cumulativeScatteringData;

void main()
{
    vec4 sum = vec4(0.0f);
    uint localSize = gl_WorkGroupSize.x * gl_WorkGroupSize.y;

    for (uint i = 0; i < DEPTH; ++i)
    {
	    uint index =  
                    (i * gl_NumWorkGroups.x * gl_NumWorkGroups.y * localSize) +
                    (gl_WorkGroupID.y * gl_NumWorkGroups.x * localSize) + 
                    gl_WorkGroupID.x * gl_WorkGroupSize.x +
                    gl_LocalInvocationID.y * gl_WorkGroupSize.x * gl_NumWorkGroups.x + 
                    gl_LocalInvocationID.x;
            
        sum += scattering[index];
        sum.a = 255.0f;

        ivec3 texturePos = ivec3(gl_WorkGroupID.x * gl_WorkGroupSize.x + gl_LocalInvocationID.x,
                                 90 - (gl_WorkGroupID.y * gl_WorkGroupSize.y + gl_LocalInvocationID.y),
                                 i);
        imageStore(cumulativeScatteringData, texturePos, sum);
    }
}